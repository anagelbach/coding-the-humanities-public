// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var ConsolidatePlugin;
    return ConsolidatePlugin = (function(_super) {
      __extends(ConsolidatePlugin, _super);

      ConsolidatePlugin.prototype.name = 'consolidate';

      function ConsolidatePlugin() {
        var engine, _i, _len, _ref;
        this.consolidate = require('consolidate');
        _ref = Object.keys(this.consolidate);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          engine = _ref[_i];
          if (engine !== 'clearCache') {
            this.config[engine] = true;
          }
        }
        ConsolidatePlugin.__super__.constructor.apply(this, arguments);
        this;
      }

      ConsolidatePlugin.prototype.render = function(opts, next) {
        var config, content, inExtension, templateData;
        inExtension = opts.inExtension, templateData = opts.templateData, content = opts.content;
        config = this.getConfig();
        if (config[inExtension] || false) {
          this.consolidate[inExtension].render(content, templateData, function(err, output) {
            if (err) {
              return next(err);
            }
            return opts.content = output;
          });
        }
        return next();
      };

      return ConsolidatePlugin;

    })(BasePlugin);
  };

}).call(this);
